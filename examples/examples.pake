append $include_dirs $expressive.__path "${expressive.__path}/.."

target application simple_function_composition sources(simple_function_composition.cpp) run_after("${__build}/simple_function_composition") include_dirs($include_dirs)
target application advanced_function_composition sources(advanced_function_composition.cpp) run_after("valgrind ${__build}/advanced_function_composition") include_dirs($include_dirs)
target application call_with_one_arg_or_none sources(call_with_one_arg_or_none.cpp) run_after("valgrind ${__build}/call_with_one_arg_or_none") include_dirs($include_dirs)
target application watch sources(watch.cpp) run_after("${__build}/watch") include_dirs($include_dirs)
target application match_example sources(match_example.cpp) run_after("${__build}/match_example") include_dirs($include_dirs)
target application strong_type_example sources(strong_type_example.cpp) run_after("${__build}/strong_type_example") include_dirs($include_dirs)
target application factory_example sources(factory.cpp) run_after("${__build}/factory_example") include_dirs($include_dirs)
target application enumerate sources(enumerate.cpp) run_after("valgrind ${__build}/enumerate") include_dirs($include_dirs)
target application nth_element_or sources(nth_element_or.cpp) include_dirs($include_dirs) # just static_asserts
target application element sources(element.cpp) include_dirs($include_dirs) run_after("${__build}/element")
target application unified_container sources(unified_container.cpp) include_dirs($include_dirs) run_after("valgrind ${__build}/unified_container")
target application make_string sources(make_string.cpp) include_dirs($include_dirs) run_after("valgrind ${__build}/make_string")
target application fn sources(fn.cpp) include_dirs($include_dirs) run_after("valgrind ${__build}/fn")
